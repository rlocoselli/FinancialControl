@model FinancialControl.Models.Entries

@{
    ViewBag.Title = FinancialControl.App_GlobalResources.st.Create;
}

<h2>@FinancialControl.App_GlobalResources.st.Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>@FinancialControl.App_GlobalResources.st.Entries</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.dateMovement, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dateMovement, new { htmlAttributes = new { @class = "dateField form-control", Type = "date" } })
            @Html.ValidationMessageFor(model => model.dateMovement, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.account_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.account_id, (IEnumerable<SelectListItem>)ViewBag.ListAccount, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.account_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.category_id, (IEnumerable<SelectListItem>)ViewBag.ListCat, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.value, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.value, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.user, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.user, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.user, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@FinancialControl.App_GlobalResources.st.Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink(@FinancialControl.App_GlobalResources.st.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $("#value").data("val", "false");
    $('#value').priceFormat({
        prefix: '',
        centsSeparator: ',',
        thousandsSeparator: ''
    });
</script>
